### Test triggers - set to "always = no" outside of testing!

# Forces AI China to refuse all Tributes/Boon requests
test_grace_refusal_trigger = {
	always = no
}

# Forces AI China to accept all Tributes/Boon requests
test_grace_acceptance_trigger = {
	always = no
}


### General Grace triggers

# Checks if ROOT is the Emperor of China and uses the Grace mechanics
is_chinese_emperor_trigger = {
	has_landed_title = e_china
	government = chinese_imperial_government
}

# Checks if Grace interactions are allowed for FROM
can_use_grace_decisions_from_trigger = {
	FROM = {
		is_chinese_emperor_trigger = no # The EoC cannot ask himself for Boons/send Tributes to himself
		# Is within China's diplo range, or along the Silk Road
		OR = {
			is_within_diplo_range = ROOT
			any_realm_province = {
				trade_route = silk_road
			}
		}
		# Is independent, king-tier, or a human player
		OR = {
			independent = yes
			real_tier = king
			ai = no
		}
		# Is capable, accessible, and not a prisoner
		prisoner = no
		NOT = { trait = incapable }
		is_inaccessible_trigger = no
		# Isn't at war with China
		NOT = {
			any_war = {
				OR = {
					AND = {
						any_attacker = {
							character = ROOT
						}
						any_defender = {
							character = FROM
						}
					}
					AND = {
						any_attacker = {
							character = FROM
						}
						any_defender = {
							character = ROOT
						}
					}
				}
			}
		}
		# Isn't a vassal of China
		NOT = {
			any_liege = {
				character = ROOT
			}
		}
	}
}

# Checks if Grace interactions are allowed for ROOT
can_use_grace_decisions_root_trigger = {
	is_chinese_emperor_trigger = no # The EoC cannot ask himself for Boons/send Tributes to himself
	# Is within China's diplo range, or along the Silk Road
	OR = {
		any_independent_ruler = {
			has_landed_title = e_china
			is_within_diplo_range = ROOT
		}
		any_realm_province = {
			trade_route = silk_road
		}
	}
	# Is independent, king-tier, or a human player
	OR = {
		independent = yes
		real_tier = king
		ai = no
	}
	# Is capable, accessible, and not a prisoner
	prisoner = no
	NOT = { trait = incapable }
	is_inaccessible_trigger = no
	# Isn't at war with China
	NOT = {
		any_war = {
			OR = {
				AND = {
					any_attacker = {
						has_landed_title = e_china
					}
					any_defender = {
						character = ROOT
					}
				}
				AND = {
					any_attacker = {
						character = ROOT
					}
					any_defender = {
						has_landed_title = e_china
					}
				}
			}
		}
	}
	# Isn't a vassal of China
	NOT = {
		any_liege = {
			has_landed_title = e_china
		}
	}
}

# Checks if the EoC is going to refuse granting FROM all Boons and refuse all Tribute from FROM
china_hates_from_trigger = {
	always = no # TODO
}

# Checks if the EoC is going to refuse granting FROMFROM all Boons and refuse all Tribute from FROMFROM
# This should be the same as china_hates_from_trigger, but with FROM replaced by FROMFROM
china_hates_fromfrom_trigger = {
	always = no # TODO
}

# Checks if the EoC is going to refuse granting FROMFROMFROM all Boons and refuse all Tribute from FROMFROM
# This should be the same as china_hates_from_trigger, but with FROM replaced by FROMFROMFROM
# This is only used when evaluating Imperial Marriages and character-based Tributes
china_hates_fromfromfrom_trigger = {
	always = no # TODO
}

# Checks if FROM dislikes the EoC
# Used by the AI when deciding if it wants to send a Tribute or not
from_hates_china_trigger = {
	always = no # TODO
}

# Checks if the EoC has strategic reasons to not accept Tributary/NAP ("Peace Treaty")/etc. Tributes/Boons from FROM
china_wants_froms_land_trigger = {
	OR = {
		# Holds a province in the Chinese region or that is de jure part of China, or has a tributary that does this
		FROM = {
			OR = {
				any_realm_province = {
					OR = {
						region = world_china
						county = {
							de_jure_liege_or_above = e_china
						}
					}
				}
				any_tributary = {
					any_realm_province = {
						OR = {
							region = world_china
							county = {
								de_jure_liege_or_above = e_china
							}
						}
					}
				}
			}
		}
		# Any realm or tributary title is claimed by the EoC
		any_claim = {
			holder_scope = {
				 OR = {
					character = FROM
					any_liege = {
						OR = {
							character = FROM
							suzerain = {
								character = FROM
							}
						}
					}
					suzerain = {
						character = FROM
					}
				 }
			}
		}
	}
}

# Checks if the EoC has strategic reasons to not accept Tributary/NAP ("Peace Treaty")/etc. Tributes/Boons from FROMFROM
# This should be the same as china_wants_froms_land_trigger, but with FROM replaced by FROMFROM
china_wants_fromfroms_land_trigger = {
	OR = {
		# Holds a province in the Chinese region or that is de jure part of China, or has a tributary that does this
		FROMFROM = {
			OR = {
				any_realm_province = {
					OR = {
						region = world_china
						county = {
							de_jure_liege_or_above = e_china
						}
					}
				}
				any_tributary = {
					any_realm_province = {
						OR = {
							region = world_china
							county = {
								de_jure_liege_or_above = e_china
							}
						}
					}
				}
			}
		}
		# Any realm or tributary title is claimed by the EoC
		any_claim = {
			holder_scope = {
				 OR = {
					character = FROMFROM
					any_liege = {
						OR = {
							character = FROMFROM
							suzerain = {
								character = FROMFROM
							}
						}
					}
					suzerain = {
						character = FROMFROM
					}
				 }
			}
		}
	}
}


### Tributes

# Checks if China accepts Tributes at all
# Might be useful if we decide to have ways for China to become isolationist
china_accepts_tribute_trigger = {
	is_inaccessible_trigger = no
	NOT = {
		trait = incapable
	}
	prisoner = no
}

# Checks if AI China will accept the "Send Gift" Tribute in general
china_accepts_gold_tribute_trigger = {
	china_accepts_tribute_trigger = yes
	always = yes # Might change later
}

# Checks if AI China will accept the "Send Gift" Tribute from FROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_gold_tribute_from_trigger = {
	china_accepts_gold_tribute_trigger = yes
	china_hates_from_trigger = no
}

# Checks if AI China will accept the "Send Gift" Tribute from FROMFROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_gold_tribute_fromfrom_trigger = {
	china_accepts_gold_tribute_trigger = yes
	china_hates_fromfrom_trigger = no
}

# Checks if AI China will accept the "Become Tributary" Tribute in general
china_accepts_tributaries_trigger = {
	china_accepts_tribute_trigger = yes
	always = yes # Might change later
}

# Checks if AI China will accept the "Become Tributary" Tribute from FROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_tributary_from_trigger = {
	china_accepts_tributaries_trigger = yes
	china_hates_from_trigger = no
	china_wants_froms_land_trigger = no
}

# Checks if AI China will accept the "Become Tributary" Tribute from FROMFROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_tributary_fromfrom_trigger = {
	china_accepts_tributaries_trigger = yes
	china_hates_fromfrom_trigger = no
	china_wants_fromfroms_land_trigger = no
}

# Checks if AI China will accept the "Supply Horses" Tribute in general
china_accepts_horses_tribute_trigger = {
	china_accepts_tribute_trigger = yes
	always = yes # Might change later
}

# Checks if AI China will accept the "Supply Horses" Tribute from FROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_horses_tribute_from_trigger = {
	china_accepts_horses_tribute_trigger = yes
	china_hates_from_trigger = no
}

# Checks if AI China will accept the "Supply Horses" Tribute from FROMFROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_horses_tribute_fromfrom_trigger = {
	china_accepts_horses_tribute_trigger = yes
	china_hates_fromfrom_trigger = no
}

# Checks if AI China will accept the "Offer Eunuch" Tribute in general
china_accepts_eunuch_tribute_trigger = {
	china_accepts_tribute_trigger = yes
	always = yes # Might change later
}

# Checks if AI China will accept the "Offer Eunuch" Tribute from FROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_eunuch_tribute_from_trigger = {
	china_accepts_eunuch_tribute_trigger = yes
	china_hates_from_trigger = no
}

# Checks if AI China will accept the "Offer Eunuch" Tribute from FROMFROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_eunuch_tribute_fromfrom_trigger = {
	china_accepts_eunuch_tribute_trigger = yes
	china_hates_fromfrom_trigger = no
}

# Checks if AI China will accept the "Offer Concubine" Tribute in general
china_accepts_concubine_tribute_trigger = {
	china_accepts_tribute_trigger = yes
	# The EoC or his heir must be male, adult, accessible, and capable of fathering children
	OR = {
		AND = {
			is_female = no
			is_adult = yes
			NOR = {
				trait = eunuch
				trait = incapable
				trait = celibate # No interest
				trait = homosexual # Should not bother with lots of concubines
			}
			prisoner = no
			is_inaccessible_trigger = no
		}
		current_heir = {
			is_female = no
			is_adult = yes
			is_landed = no
			host = {
				character = ROOT
			}
			dynasty = ROOT
			NOR = {
				trait = eunuch
				trait = incapable
				trait = celibate # No interest
				trait = homosexual # Should not bother with lots of concubines
			}
			prisoner = no
			is_inaccessible_trigger = no
		}
	}
}

# Checks if AI China will accept the "Offer Concubine" Tribute from FROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_concubine_tribute_from_trigger = {
	china_accepts_concubine_tribute_trigger = yes
	china_hates_from_trigger = no
}

# Checks if AI China will accept the "Offer Concubine" Tribute from FROMFROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_concubine_tribute_fromfrom_trigger = {
	china_accepts_concubine_tribute_trigger = yes
	china_hates_fromfrom_trigger = no
}

# Checks if AI china will accept the "Offer Commander" Tribute in general
china_accepts_commander_tribute_trigger = {
	# The EoC needs to be a primary war participant
	any_war = {
		NOT = {
			using_cb = peasant_revolt
			# Add more revolts?
		}
		OR = {
			attacker = {
				character = ROOT
			}
			defender = {
				character = ROOT
			}
		}
	}
}

# Checks if AI China will accept the "Offer Commander" Tribute from FROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_commander_tribute_from_trigger = {
	china_accepts_commander_tribute_trigger = yes
	china_hates_from_trigger = no
}

# Checks if AI China will accept the "Offer Commander" Tribute from FROMFROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_commander_tribute_fromfrom_trigger = {
	china_accepts_commander_tribute_trigger = yes
	china_hates_fromfrom_trigger = no
}

# Checks if AI china will accept the "Offer Physician" Tribute in general
china_accepts_physician_tribute_trigger = {
	always = no # TODO: Need to implement sensible conditions
}

# Checks if AI China will accept the "Offer Physician" Tribute from FROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_physician_tribute_from_trigger = {
	china_accepts_physician_tribute_trigger = yes
	china_hates_from_trigger = no
}

# Checks if AI China will accept the "Offer Physician" Tribute from FROMFROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_physician_tribute_fromfrom_trigger = {
	china_accepts_physician_tribute_trigger = yes
	china_hates_fromfrom_trigger = no
}

# Checks if AI china will accept the "Launch a Relief Expedition" Tribute in general
china_accepts_relief_tribute_trigger = {
	always = no # TODO: Need to implement sensible conditions
}

# Checks if AI China will accept the "Launch a Relief Expedition" Tribute from FROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_relief_tribute_from_trigger = {
	china_accepts_relief_tribute_trigger = yes
	china_hates_from_trigger = no
}

# Checks if AI China will accept the "Launch a Relief Expedition" Tribute from FROMFROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_relief_tribute_fromfrom_trigger = {
	china_accepts_relief_tribute_trigger = yes
	china_hates_fromfrom_trigger = no
}

# Checks if AI china will accept the "Offer Artifact" Tribute in general
china_accepts_artifact_tribute_trigger = {
	always = yes # TODO: Need to implement sensible conditions
}

# Checks if AI China will accept the "Offer Artifact" Tribute from FROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_artifact_tribute_from_trigger = {
	china_accepts_artifact_tribute_trigger = yes
	china_hates_from_trigger = no
}

# Checks if AI China will accept the "Offer Artifact" Tribute from FROMFROM
# The AI will never try to send a Tribute if it wouldn't be accepted by an AI China
china_accepts_artifact_tribute_fromfrom_trigger = {
	china_accepts_artifact_tribute_trigger = yes
	china_hates_fromfrom_trigger = no
}

### Boons

# Checks if AI China will grant the "Ask for Peace Deal" Boon in general
china_grants_peace_deal_boon_trigger = {
	always = yes
}

# Checks if AI China would grant FROM the "Ask for Peace Deal" Boon
# The AI will never ask for Boons that will be refused
china_grants_peace_deal_boon_from_trigger = {
	china_grants_peace_deal_boon_trigger = yes
	china_hates_from_trigger = no
	china_wants_froms_land_trigger = no
	# China is only interested in peace treaties with people near it or its tributaries
	FROM = {
		any_realm_province = {
			any_neighbor_province = {
				OR = {
					AND = {
						has_owner = yes
						owner = {
							OR = {
								character = ROOT
								is_liege_or_above = ROOT
								suzerain = {
									character = ROOT
								}
								any_liege = {
									suzerain = {
										character = ROOT
									}
								}
							}
						}
					}
					AND = {
						is_land = no
						any_neighbor_province = {
							OR = {
								AND = {
									has_owner = yes
									owner = {
										OR = {
											character = ROOT
											is_liege_or_above = ROOT
											suzerain = {
												character = ROOT
											}
											any_liege = {
												suzerain = {
													character = ROOT
												}
											}
										}
									}
								}
								AND = {
									is_land = no
									any_neighbor_province = {
										owner = {
											OR = {
												character = ROOT
												is_liege_or_above = ROOT
												suzerain = {
													character = ROOT
												}
												any_liege = {
													suzerain = {
														character = ROOT
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

# Checks if AI China would grant FROMFROM the "Ask for Peace Deal" Boon
# The AI will never ask for Boons that will be refused
china_grants_peace_deal_boon_fromfrom_trigger = {
	china_grants_peace_deal_boon_trigger = yes
	china_hates_fromfrom_trigger = no
	china_wants_fromfroms_land_trigger = no
	# China is only interested in peace treaties with people near it or its tributaries
	FROMFROM = {
		any_realm_province = {
			any_neighbor_province = {
				OR = {
					AND = {
						has_owner = yes
						owner = {
							OR = {
								character = ROOT
								is_liege_or_above = ROOT
								suzerain = {
									character = ROOT
								}
								any_liege = {
									suzerain = {
										character = ROOT
									}
								}
							}
						}
					}
					AND = {
						is_land = no
						any_neighbor_province = {
							OR = {
								AND = {
									has_owner = yes
									owner = {
										OR = {
											character = ROOT
											is_liege_or_above = ROOT
											suzerain = {
												character = ROOT
											}
											any_liege = {
												suzerain = {
													character = ROOT
												}
											}
										}
									}
								}
								AND = {
									is_land = no
									any_neighbor_province = {
										owner = {
											OR = {
												character = ROOT
												is_liege_or_above = ROOT
												suzerain = {
													character = ROOT
												}
												any_liege = {
													suzerain = {
														character = ROOT
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

# Checks if AI China will grant the "Request Physician" Boon in general
# The AI will never ask for Boons that will be refused
china_grants_physician_boon_trigger = {
	always = yes # TODO: Refrain from sending physicians if there is a large number of diseased provinces in China?
}

# Checks if AI China would grant FROM the "Request Physician" Boon
# The AI will never ask for Boons that will be refused
china_grants_physician_boon_from_trigger = {
	china_grants_physician_boon_trigger = yes
	china_hates_from_trigger = no
}

# Checks if AI China would grant FROMFROM the "Request Physician" Boon
# The AI will never ask for Boons that will be refused
china_grants_physician_boon_fromfrom_trigger = {
	china_grants_physician_boon_trigger = yes
	china_hates_fromfrom_trigger = no
}

# Checks if AI China will grant the "Request Chinese Artifact" Boon in general
# The AI will never ask for Boons that will be refused
china_grants_artifact_boon_trigger = {
	always = yes # TODO: Refrain from sending artifacts if poor (or just Greedy)?
}

# Checks if AI China would grant FROM the "Request Chinese Artifact" Boon
# The AI will never ask for Boons that will be refused
china_grants_artifact_boon_from_trigger = {
	china_grants_artifact_boon_trigger = yes
	china_hates_from_trigger = no
}

# Checks if AI China would grant FROMFROM the "Request Chinese Artifact" Boon
# The AI will never ask for Boons that will be refused
china_grants_artifact_boon_fromfrom_trigger = {
	china_grants_artifact_boon_trigger = yes
	china_hates_fromfrom_trigger = no
}

# Checks if AI China will grant the "Request Siege Engineer" Boon in general
# The AI will never ask for Boons that will be refused
china_grants_siege_engineer_boon_trigger = {
	# The EoC cannot be a primary war participant
	NOT = {
		any_war = {
			NOT = {
				using_cb = peasant_revolt
				# Add more revolts?
			}
			OR = {
				attacker = {
					character = ROOT
				}
				defender = {
					character = ROOT
				}
			}
		}
	}
}

# Checks if AI China would grant FROM the "Request Siege Engineer" Boon
# The AI will never ask for Boons that will be refused
china_grants_siege_engineer_boon_from_trigger = {
	china_grants_siege_engineer_boon_trigger = yes
	china_hates_from_trigger = no
	china_wants_froms_land_trigger = no
}

# Checks if AI China would grant FROMFROM the "Request Siege Engineer" Boon
# The AI will never ask for Boons that will be refused
china_grants_siege_engineer_boon_fromfrom_trigger = {
	china_grants_siege_engineer_boon_trigger = yes
	china_hates_fromfrom_trigger = no
	china_wants_fromfroms_land_trigger = no
}

# Checks if AI China will grant the "Request Strategist" Boon in general
# The AI will never ask for Boons that will be refused
china_grants_strategist_boon_trigger = {
	# The EoC cannot be a primary war participant
	NOT = {
		any_war = {
			NOT = {
				using_cb = peasant_revolt
				# Add more revolts?
			}
			OR = {
				attacker = {
					character = ROOT
				}
				defender = {
					character = ROOT
				}
			}
		}
	}
}

# Checks if AI China would grant FROM the "Request Strategist" Boon
# The AI will never ask for Boons that will be refused
china_grants_strategist_boon_from_trigger = {
	china_grants_strategist_boon_trigger = yes
	china_hates_from_trigger = no
	china_wants_froms_land_trigger = no
}

# Checks if AI China would grant FROMFROM the "Request Strategist" Boon
# The AI will never ask for Boons that will be refused
china_grants_strategist_boon_fromfrom_trigger = {
	china_grants_strategist_boon_trigger = yes
	china_hates_fromfrom_trigger = no
	china_wants_fromfroms_land_trigger = no
}

# Checks if AI China will grant the "Request Scholar-Bureaucrat" Boon in general
# The AI will never ask for Boons that will be refused
china_grants_administrator_boon_trigger = {
	always = yes # Might change at some point
}

# Checks if AI China would grant FROM the "Request Scholar-Bureaucrat" Boon
# The AI will never ask for Boons that will be refused
china_grants_administrator_boon_from_trigger = {
	china_grants_administrator_boon_trigger = yes
	china_hates_from_trigger = no
}

# Checks if AI China would grant FROMFROM the "Request Scholar-Bureaucrat" Boon
# The AI will never ask for Boons that will be refused
china_grants_administrator_boon_fromfrom_trigger = {
	china_grants_administrator_boon_trigger = yes
	china_hates_fromfrom_trigger = no
}

# Checks if AI China will grant the "Request Master Engineer" Boon in general
# The AI will never ask for Boons that will be refused
china_grants_master_engineer_boon_trigger = {
	always = yes # Might change at some point
}

# Checks if AI China would grant FROM the "Request Master Engineer" Boon
# The AI will never ask for Boons that will be refused
china_grants_master_engineer_boon_from_trigger = {
	china_grants_master_engineer_boon_trigger = yes
	china_hates_from_trigger = no
}

# Checks if AI China would grant FROMFROM the "Request Master Engineer" Boon
# The AI will never ask for Boons that will be refused
china_grants_master_engineer_boon_fromfrom_trigger = {
	china_grants_master_engineer_boon_trigger = yes
	china_hates_fromfrom_trigger = no
}

# Checks if AI China will grant the "Request Trade Contract" Boon in general
# The AI will never ask for Boons that will be refused
china_grants_trade_contract_boon_trigger = {
	always = yes # Might change at some point
}

# Checks if AI China would grant FROM the "Request Trade Contract" Boon
# The AI will never ask for Boons that will be refused
china_grants_trade_contract_boon_from_trigger = {
	china_grants_trade_contract_boon_trigger = yes
	china_hates_from_trigger = no
	china_wants_froms_land_trigger = no
}

# Checks if AI China would grant FROMFROM the "Request Trade Contract" Boon
# The AI will never ask for Boons that will be refused
china_grants_trade_contract_boon_fromfrom_trigger = {
	china_grants_trade_contract_boon_trigger = yes
	china_hates_fromfrom_trigger = no
	china_wants_fromfroms_land_trigger = no
}

# Checks if AI China will grant the "Request Imperial Marriage" Boon in general
# The AI will never ask for Boons that will be refused
china_grants_imperial_marriage_boon_trigger = {
	any_realm_character = {
		is_valid_dragon_bride_candidate = yes
	}
}

# Checks if a character is a valid imperial marriage candidate
# Note: This does not check for lovers, so to exclude the EoC's lovers we need to check for that separately
is_valid_dragon_bride_candidate = {
	dynasty = PREV
	is_female = yes
	is_adult = yes
	NOT = { age = 35 } # Must be of childbearing age and have several years left before this isn't the case
	NOT = {
		any_child_even_if_dead = {
			always = yes # Cannot already have children
		}
	}
	prisoner = no
	is_inaccessible_trigger = no
	NOR = {
		trait = incapable # The spouse should be capable
		trait = celibate # The EoC should respect this, as everyone else in the game does
		trait = pregnant # Known to be pregnant; checking for is_pregnant would reveal hidden pregnancies!
	}
	is_married = no
	is_betrothed = no
	is_consort = no
	NOT = {
		PREV = {
			current_heir = {
				character = PREVPREV
			}
		}
	}
	# Same restrictions as for concubine candidates
	NOT = { trait = incapable }
	NOT = { trait = inbred }
	NOT = { trait = imbecile }
	NOT = { trait = maimed }
	NOT = { trait = infirm }
	NOT = { trait = wounded }
	NOT = { trait = severely_injured }
	NOT = { trait = one_eyed }
	NOT = { trait = one_handed }
	NOT = { trait = one_legged }
	NOT = { trait = disfigured }
	NOT = { trait = mangled }
	NOT = { is_ascetic_trigger = yes }
	NOT = { trait = celibate }
	is_ill = no
	trait = dragon_bride_unmarried # Is a potential Imperial Marriage candidate
}

# Checks if AI China would grant FROM the "Request Imperial Marriage" Boon
# The AI will never ask for Boons that will be refused
china_grants_imperial_marriage_boon_from_trigger = {
	china_grants_imperial_marriage_boon_trigger = yes
	china_hates_from_trigger = no
	china_hates_fromfrom_trigger = no
	china_wants_froms_land_trigger = no # A marriage results in a Peace Deal/NAP
}

# Checks if AI China would grant FROMFROM the "Request Imperial Marriage" Boon
# The AI will never ask for Boons that will be refused
china_grants_imperial_marriage_boon_fromfrom_trigger = {
	china_grants_imperial_marriage_boon_trigger = yes
	china_hates_fromfrom_trigger = no
	china_hates_fromfromfrom_trigger = no
	china_wants_fromfroms_land_trigger = no # A marriage results in a Peace Deal/NAP
}