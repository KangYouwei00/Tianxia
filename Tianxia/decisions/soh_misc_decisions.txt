decisions = {
	claim_li_surname = {
		only_playable = yes
		potential = {
			has_character_flag = is_li_bian
			NOT = {
				has_character_flag = li_bian_name_change
			}
		}
		allow = {
			tier = emperor
			government = chinese_imperial_government
			#custom_tooltip = {
			#	text = must_rule_tang_china_and_have_a_proper_bloodline
			#	primary_title = {
			#		has_title_flag = tang_china
			#	}
			#	any_owned_bloodline = {
			#		has_bloodline_flag = tang_china
			#	}
			#}
			prestige = 1000
			
			# Must be at peace and not have a regent
			war = no
			has_regent = no
			
			# If there's some other Tang realm running around (even with another name) you can't do it
			custom_tooltip = {
				text = no_other_li_chinese_imperial_emperor
				NOT = {
					any_independent_ruler = {
						tier = emperor
						government = chinese_imperial_government
						dynasty = 1051150 # Li - ruling Tang dynasty
					}
				}
			}
		}
		effect = {
			set_character_flag = li_bian_name_change
			# All descendants that are part of the current (Xu) dynasty
			any_dynasty_member_even_if_dead = {
				limit = {
					is_descendant_of = ROOT
				}
				dynasty = 1051150 # Li - ruling Tang dynasty
			}
			dynasty = 1051150 # Li - ruling Tang dynasty
			set_name = "Bian"
			hidden_tooltip = {
				# Being able to claim to be the successor of Tang helps a little with the Mandate
				change_variable = {
					which = stored_mandate_change
					value = 1000
				}
			}
			if = {
				limit = {
					china_or_pretender_can_be_tang_trigger = yes
				}
				primary_title = {
					remove_global_pretender_china_name_flag_effect = yes
					clear_all_chinese_name_title_flags_effect = yes
					set_name = "Tang"
					adjective = "Tang"
					set_title_flag = tang_china
					add_global_pretender_china_name_flag_effect = yes
				}
			}
		}
		ai_will_do = {
			factor = 1000 # We want the AI to do this if at all possible
		}
	}
}